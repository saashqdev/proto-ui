{
  "e-ripple/color": {
    "type": "enum",
    "options": [
      "light",
      "dark"
    ],
    "description": "Ripple color"
  },
  "e-watermark/text": {
    "type": "string",
    "description": "Watermark text"
  },
  "e-watermark/image": {
    "type": "CanvasImageSource",
    "description": "Watermark pattern. If not, it will be drawn as text by default."
  },
  "e-watermark/opacity": {
    "type": "number",
    "description": "Watermark opacity"
  },
  "f-draggable/value": {
    "type": "any",
    "description": "The value to be passed"
  },
  "f-draggable/transfer": {
    "type": "string, Element",
    "options": [
      "clone",
      "self"
    ],
    "description": "The mobile element when dragging. Optional values: `'clone'` means dragging a copy of itself when dragging, `'self'` means dragging itself when dragging, you can also pass in an element directly, or use slot to set it."
  },
  "f-draggable/immediate": {
    "type": "boolean",
    "description": "Whether to drag immediately when the mouse is pressed. The default value is `false`, which is to prevent mouse clicks and other events from frequently triggering drag operations."
  },
  "f-draggable/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "f-draggable/constraint": {
    "type": "function",
    "description": "The constraint function of the moving path when dragging. You need to pass in an object, which must contain at least the following fields: `startLeft`, `startTop`, `dragX`, `dragY`"
  },
  "f-dragger/axis": {
    "type": "string",
    "description": "The axis of the movement path when dragging. Optional values: `both` means it can move in any direction, `horizontal` means it is limited to horizontal movement, and `vertical` means it is limited to vertical movement."
  },
  "f-dragger/grid": {
    "type": "object",
    "description": "The constraint grid of the moving path when dragging. The value is an object in {x,y} format, indicating the size of the horizontal and vertical grid."
  },
  "f-dragger/range": {
    "type": "string, object",
    "description": "Drag range. The value can be an object in the format of {left,top,right,bottom}, which represents the upper, lower, left and right boundaries of the proxy element. When the value is `offset-parent`, the proxy element is restricted to move within offsetParent, which is only applicable when `position` is `absolute`."
  },
  "f-dragger/range-mode": {
    "type": "string",
    "description": "Drag range mode. Optional values: `inside` means moving inside the drag range, `center` means moving at the edge and inside of the drag range, `outside` means moving outside and inside of the drag range."
  },
  "f-dragger/value": {
    "type": "any",
    "description": "The value to be passed"
  },
  "f-dragger/transfer": {
    "type": "string, Element",
    "description": "The mobile element when dragging. Optional values: `'clone'` means dragging a copy of itself when dragging, `'self'` means dragging itself when dragging, you can also pass in an element directly, or use slot to set it."
  },
  "f-dragger/immediate": {
    "type": "boolean",
    "description": "Whether to drag immediately when the mouse is pressed. The default value is `false`, which is to prevent mouse clicks and other events from frequently triggering drag operations."
  },
  "f-dragger/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "f-droppable/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "f-forbidden/contextmenu": {
    "type": "boolean",
    "description": "Whether to disable the right-click menu popup"
  },
  "f-forbidden/select": {
    "type": "boolean",
    "description": "Whether to prohibit text selection"
  },
  "f-forbidden/copy": {
    "type": "boolean",
    "description": "Whether to prohibit copying"
  },
  "f-forbidden/save-key": {
    "type": "boolean",
    "description": "Whether to prohibit saving as key"
  },
  "f-forbidden/devtools-key": {
    "type": "boolean",
    "description": "Whether to disable developer tool keys"
  },
  "f-forbidden/senderVM": {
    "type": "FForbidden",
    "description": ""
  },
  "f-render/vnode": {
    "type": "VNode",
    "description": "The VNode node that needs to be rendered"
  },
  "f-slot/vm": {
    "type": "Vue",
    "description": "Example"
  },
  "f-slot/name": {
    "type": "string",
    "description": "Slot name"
  },
  "f-slot/props": {
    "type": "object",
    "description": "Properties that need to be passed to scoped slots"
  },
  "f-slot/catchError": {
    "type": "boolean",
    "description": "Whether to capture exceptions to prevent errors from terminating the overall rendering"
  },
  "i-icon/name": {
    "type": "string",
    "description": "Icon name"
  },
  "m-complex/value": {
    "type": "any",
    "description": "The currently selected value"
  },
  "m-complex/auto-select": {
    "type": "boolean",
    "description": "Whether to automatically select the first non-disabled item"
  },
  "m-complex/cancelable": {
    "type": "boolean",
    "description": "Is it possible to deselect?"
  },
  "m-complex/multiple": {
    "type": "boolean",
    "description": "Whether to switch to multiple selection mode"
  },
  "m-complex/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "m-complex/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "m-complex-item/value": {
    "type": "any",
    "description": "The value of this item"
  },
  "m-complex-item/selected": {
    "type": "boolean",
    "description": "Is this option selected?"
  },
  "m-complex-item/disabled": {
    "type": "boolean",
    "description": "Disable this option"
  },
  "m-complex-item/item": {
    "type": "object",
    "description": "Related objects. When this option is selected, the thrown event will pass this object, which is convenient for development."
  },
  "m-dynamic/data": {
    "type": "Array",
    "description": "Data"
  },
  "m-dynamic/dynamic": {
    "type": "boolean",
    "description": "Is it possible to add/remove items dynamically?"
  },
  "m-dynamic/get-default-item": {
    "type": "Function",
    "description": "Pass in a method to get the default item"
  },
  "m-dynamic/initial-add": {
    "type": "boolean",
    "description": "Whether to automatically add items if the number of items in `data` is initially less than `min-count`"
  },
  "m-dynamic/min-count": {
    "type": "number",
    "description": "Minimum number of items"
  },
  "m-dynamic/max-count": {
    "type": "number",
    "description": "Maximum number of items"
  },
  "m-group-parent/collapsible": {
    "type": "boolean",
    "description": "Whether the group can be collapsed"
  },
  "m-group-parent/accordion": {
    "type": "boolean",
    "description": "Whether to expand only one group at a time"
  },
  "m-group-parent/expand-trigger": {
    "type": "string",
    "description": "The triggering method of expanding/collapse. Optional values: `'click'` means that the entire row can be triggered by clicking, and `'click-expander'` means that it is triggered only when the small arrow is clicked."
  },
  "m-group/title": {
    "type": "string",
    "description": "Displayed title"
  },
  "m-group/collapsible": {
    "type": "boolean",
    "description": "`false`"
  },
  "m-group/expanded": {
    "type": "boolean",
    "description": "Expand/collapse state"
  },
  "m-group/disabled": {
    "type": "boolean",
    "description": "Whether to disable. Cannot expand/collapse when disabled"
  },
  "m-multiplex/value": {
    "type": "Array",
    "description": "The values of all selected items"
  },
  "m-multiplex/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "m-multiplex/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "m-multiplex-item/value": {
    "type": "any",
    "description": "The value of this item"
  },
  "m-multiplex-item/selected": {
    "type": "boolean",
    "description": "Whether to select this option"
  },
  "m-multiplex-item/disabled": {
    "type": "boolean",
    "description": "Disable this option"
  },
  "m-multiplex-item/item": {
    "type": "object",
    "description": "Related objects. When this option is selected, the thrown event will pass this object, which is convenient for development."
  },
  "m-popper/opened": {
    "type": "boolean",
    "description": "Popup/closed state"
  },
  "m-popper/trigger": {
    "type": "string",
    "description": "Trigger method. Optional values: `'click'`, `'hover'`, `'right-click'`, `'double-click'`, `'manual'`"
  },
  "m-popper/reference": {
    "type": "string, HTMLElement, Function",
    "description": "Reference element. Optional values: `'parent'` means parent element, `'prev'` means previous element, `'next'` means next element. You can also pass an HTML element, or a method to return an element."
  },
  "m-popper/placement": {
    "type": "string",
    "description": "Pop-up orientation. Optional values: `'top'`, `'bottom'`, `'left'`, `'right'`, `'top-start'`, `'top-end'`, `'bottom-start'`, `'bottom-end'`, `'left-start`',` 'left-end'`, `'right-start'`, `'right-end'`"
  },
  "m-popper/hover-delay": {
    "type": "number",
    "description": "Delay time when trigger is `'hover'`"
  },
  "m-popper/hide-delay": {
    "type": "number",
    "description": "Hide delay when trigger is `'hover'`"
  },
  "m-popper/append-to": {
    "type": "string",
    "description": "Set which element to add to. Optional values: `'body'` means adding to document.body, `'reference'` means adding to the reference element"
  },
  "m-popper/boundaries-element": {
    "type": "Element, string",
    "description": "Margin element. Used to define the margin of the popup layer. The default is the parent element of the first scroll."
  },
  "m-popper/escape-with-reference": {
    "type": "boolean",
    "description": "When the trigger element leaves the margin, the popup leaves/remains inside the margin element"
  },
  "m-popper/follow-cursor": {
    "type": "boolean, number, object",
    "description": "Whether to follow the mouse"
  },
  "m-popper/offset": {
    "type": "string",
    "description": "Popup layer offset, such as: '10', '10px 10px', '10% 10%', the first value represents the horizontal offset, the second value represents the vertical displacement, the default unit is `px`"
  },
  "m-popper/options": {
    "type": "object",
    "description": "Add options to popper.js"
  },
  "m-popper/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "m-singlex/value": {
    "type": "any",
    "description": "The currently selected value"
  },
  "m-singlex/auto-select": {
    "type": "boolean",
    "description": "Whether to automatically select the first non-disabled item"
  },
  "m-singlex/cancelable": {
    "type": "boolean",
    "description": "Is it possible to deselect?"
  },
  "m-singlex/router": {
    "type": "boolean",
    "description": "Whether to enable routing mode"
  },
  "m-singlex/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "m-singlex/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "m-singlex-item/value": {
    "type": "any",
    "description": "The value of this item"
  },
  "m-singlex-item/disabled": {
    "type": "boolean",
    "description": "Disable this option"
  },
  "m-singlex-item/item": {
    "type": "object",
    "description": "Related objects. When this option is selected, the thrown event will pass this object, which is convenient for development."
  },
  "u-avatar/shape": {
    "type": "string",
    "description": "Shape. Optional values: `circle`, `square`"
  },
  "u-avatar/size": {
    "type": "string",
    "description": "Avatar size. Optional values: `'mini'`, `'small'`, `'normal'`, `'large'`, `'huge'`. To customize the size, you can directly set `style=\"width: 40px; height: 40px;\"`"
  },
  "u-badge/value": {
    "type": "number, string",
    "description": "Displayed value"
  },
  "u-badge/max": {
    "type": "number",
    "description": "The maximum value. If the value exceeds the maximum value, it will be displayed as `max+`. `value` must be of `Number` type."
  },
  "u-badge/corner": {
    "type": "boolean",
    "description": "Whether to insert to the upper right corner"
  },
  "u-badge/dot": {
    "type": "boolean",
    "description": "Whether to display as a small dot"
  },
  "u-button/href": {
    "type": "string",
    "description": "Link address"
  },
  "u-button/target": {
    "type": "string",
    "description": "(native attribute)"
  },
  "u-button/to": {
    "type": "string, Location",
    "description": "Requires vue-router, same as the `to` attribute of `<router-link>`. Can be a string or an object describing the target location."
  },
  "u-button/replace": {
    "type": "boolean",
    "description": "Requires vue-router, same as the `replace` attribute of `<router-link>`. If `true`, when clicked, `router.replace()` will be called instead of `router.push()`, so no `history` record will be left after navigation."
  },
  "u-button/append": {
    "type": "boolean",
    "description": "Requires vue-router, same as the `append` prop of `<router-link>`. If `true`, append the path of `to` after the current path."
  },
  "u-button/disabled": {
    "type": "boolean",
    "description": "Whether to disable. If disabled, it will not respond to the `click` event."
  },
  "u-button/display": {
    "type": "string",
    "description": "Display method. Optional values: `'inline'`, `'block'`"
  },
  "u-carousel/value": {
    "type": "any",
    "description": "Play position"
  },
  "u-carousel/autoplay": {
    "type": "boolean",
    "description": "Whether to play automatically"
  },
  "u-carousel/loop": {
    "type": "boolean",
    "description": "Whether to play in a loop, i.e. connect the beginning and the end"
  },
  "u-carousel/interval": {
    "type": "number",
    "description": "Slide switching time. If the set value is less than the animation duration, the slide will switch after the animation is completed."
  },
  "u-carousel/direction": {
    "type": "string",
    "description": "Slideshow direction"
  },
  "u-carousel/animation": {
    "type": "string",
    "description": "Slide transition animation"
  },
  "u-carousel-item/title": {
    "type": "string",
    "description": "The title of this item"
  },
  "u-carousel-item/value": {
    "type": "any",
    "description": "The value of this item"
  },
  "u-cascade-select/data": {
    "type": "Array<{ text, value }>",
    "description": "Data list"
  },
  "u-cascade-select/value": {
    "type": "any",
    "description": "The currently selected value"
  },
  "u-cascade-select/categories": {
    "type": "Array<{ label, key, placeholder }>",
    "description": "Multi-level classification"
  },
  "u-cascade-select/hide-empty": {
    "type": "boolean",
    "description": "Whether to hide empty lists"
  },
  "u-cascade-select/converter": {
    "type": "string, object",
    "description": "Converter between value and values. Optional values: `'join'` means joining the values   array to become value, `'join.number'` is similar to `join`, except that it will consider the case where it is a number. You can also use `:` to modify the separator, similar to Vue's instruction parameters, `'last-value'` means using the last item as value. You can also pass in an object containing { get, set }"
  },
  "u-cascade-select/field": {
    "type": "string",
    "description": "Display text field"
  },
  "u-cascade-select/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-cascade-select/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-checkbox/value": {
    "type": "boolean, null",
    "description": "Selected state, `null` indicates uncertain state"
  },
  "u-checkbox/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-checkbox/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-checkboxes/value": {
    "type": "Array",
    "description": "Selected items in a multi-select group"
  },
  "u-checkboxes/min": {
    "type": "number",
    "description": "The minimum number of checkboxes that can be checked"
  },
  "u-checkboxes/max": {
    "type": "number",
    "description": "The maximum number of checkboxes that can be checked"
  },
  "u-checkboxes/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-checkboxes/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-checkbox/label": {
    "type": "any",
    "description": "Multiple checkbox label. Used to associate the value of a multiple-select group."
  },
  "u-circular-progress/percent": {
    "type": "number",
    "description": "Percentage"
  },
  "u-collapse/accordion": {
    "type": "boolean",
    "description": "Whether only one panel will be expanded at a time"
  },
  "u-collapse/expand-trigger": {
    "type": "string",
    "description": "The triggering method of expanding/collapse. Optional values: `'click'` means that the entire row can be triggered by clicking, and `'click-expander'` means that it is triggered only when the small arrow is clicked."
  },
  "u-collapse/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-collapse-item/title": {
    "type": "string",
    "description": "Displayed title"
  },
  "u-collapse-item/expanded": {
    "type": "boolean",
    "description": "Expand/collapse state"
  },
  "u-collapse-item/disabled": {
    "type": "boolean",
    "description": "Whether to disable. Cannot expand/collapse when disabled"
  },
  "u-combo-pagination/page": {
    "type": "number",
    "description": "Current page number"
  },
  "u-combo-pagination/page-size": {
    "type": "number",
    "description": "Page size"
  },
  "u-combo-pagination/page-size-options": {
    "type": "Array",
    "description": "List of page size options"
  },
  "u-combo-pagination/total": {
    "type": "number",
    "description": "Total number of pages"
  },
  "u-combo-pagination/side": {
    "type": "number",
    "description": "When there are many pages, the number of pages displayed on both sides is constant."
  },
  "u-combo-pagination/around": {
    "type": "number",
    "description": "When there are many pages, the number displayed in the middle is constant"
  },
  "u-combo-pagination/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-combo-pagination/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-combo-pagination/show-total": {
    "type": "boolean",
    "description": "Whether to display the total number of entries"
  },
  "u-combo-pagination/show-sizer": {
    "type": "boolean",
    "description": "Whether to display the option to switch the page size"
  },
  "u-combo-pagination/show-jumper": {
    "type": "boolean",
    "description": "Whether to display the page jump input box"
  },
  "u-combo-slider/value": {
    "type": "number",
    "description": "The value of the slider"
  },
  "u-combo-slider/min": {
    "type": "number",
    "description": "Minimum value"
  },
  "u-combo-slider/max": {
    "type": "number",
    "description": "Maximum value"
  },
  "u-combo-slider/step": {
    "type": "number",
    "description": "Interval. `0` means continuous"
  },
  "u-combo-slider/precision": {
    "type": "number",
    "description": "Precision, which indicates the smallest unit to be retained by a number, both integers and decimals are acceptable"
  },
  "u-combo-slider/range": {
    "type": "Array",
    "description": "Further restrict `value`, usually pass in an array, the first value indicates the start value of the range, and the second value indicates the end value of the range."
  },
  "u-combo-slider/formatter": {
    "type": "string, object",
    "description": "Format string, see examples for details. You can also pass a format object containing `get` and `set` methods."
  },
  "u-combo-slider/sync-on": {
    "type": "string",
    "description": "When to synchronize the value to the `<u-slider>` component after input. Optional values: `'input'` means synchronization during input, `'blur'` means synchronization when out of focus"
  },
  "u-combo-slider/hide-buttons": {
    "type": "boolean",
    "description": "Whether to hide the button"
  },
  "u-combo-slider/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-combo-slider/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-crumb/none": {
    "type": "",
    "description": ""
  },
  "u-crumb-item/type": {
    "type": "string",
    "description": "Type. Optional values: `'link'` indicates a link, which is clickable, and `'text'` only displays text in the default color, which is not clickable."
  },
  "u-crumb-item/href": {
    "type": "string",
    "description": "Link address"
  },
  "u-crumb-item/target": {
    "type": "string",
    "description": "(native attribute)"
  },
  "u-crumb-item/to": {
    "type": "string, Location",
    "description": "Requires vue-router, same as the `to` attribute of `<router-link>`. Can be a string or an object describing the target location."
  },
  "u-crumb-item/replace": {
    "type": "boolean",
    "description": "Requires vue-router, same as the `replace` attribute of `<router-link>`. If `true`, when clicked, `router.replace()` will be called instead of `router.push()`, so no `history` record will be left after navigation."
  },
  "u-crumb-item/append": {
    "type": "boolean",
    "description": "Requires vue-router, same as the `append` prop of `<router-link>`. If `true`, append the path of `to` after the current path."
  },
  "u-crumb-item/disabled": {
    "type": "boolean",
    "description": "Whether it is not clickable. If `true`, it will not respond to `click` events."
  },
  "u-drawer/visible": {
    "type": "boolean",
    "description": "Whether to display"
  },
  "u-drawer/title": {
    "type": "string",
    "description": "Title of the drawer"
  },
  "u-drawer/okButton": {
    "type": "string",
    "description": "Confirm button text, if empty it will not be displayed"
  },
  "u-drawer/cancelButton": {
    "type": "string",
    "description": "Cancel button text, if empty it will not be displayed"
  },
  "u-drawer/size": {
    "type": "string",
    "description": "The size of the drawer. Possible values: `'small'`, `'normal'`, `'large'`"
  },
  "u-drawer/static": {
    "type": "boolean",
    "description": "Whether to embed in page display"
  },
  "u-drawer/maskClosable": {
    "type": "boolean",
    "description": "Whether to close the drawer when clicking the mask"
  },
  "u-form-table-view/border": {
    "type": "boolean",
    "description": "Is there a border?"
  },
  "u-form-table-view/data": {
    "type": "Array",
    "description": "Data"
  },
  "u-form-table-view/dynamic": {
    "type": "boolean",
    "description": "Is it possible to add/remove items dynamically?"
  },
  "u-form-table-view/get-default-item": {
    "type": "Function",
    "description": "Pass in a method to get the default item"
  },
  "u-form-table-view/initial-add": {
    "type": "boolean",
    "description": "Whether to automatically add items if the number of items in `data` is initially less than `min-count`"
  },
  "u-form-table-view/min-count": {
    "type": "number",
    "description": "Minimum number of items"
  },
  "u-form-table-view/max-count": {
    "type": "number",
    "description": "Maximum number of items"
  },
  "u-form-table-view-column/title": {
    "type": "string",
    "description": "Column header"
  },
  "u-form-table-view-column/field": {
    "type": "string",
    "description": "Field name in data"
  },
  "u-form-table-view-column/width": {
    "type": "string, number",
    "description": "Specify the width of the column, either as a number or a percentage."
  },
  "u-form-table-view-column/ellipsis": {
    "type": "boolean",
    "description": "Whether to omit the display. By default, the text will wrap if it exceeds the limit."
  },
  "u-form-table-view-column/formatter": {
    "type": "string, object, Function, Formatter",
    "description": "Formatter"
  },
  "u-form-table-view-column/hidden": {
    "type": "boolean",
    "description": "Whether to hide"
  },
  "u-form-table-view-column/start-index": {
    "type": "number",
    "description": "Starting number when `type=\"index\"`"
  },
  "u-form-table-view-column/label": {
    "type": "string",
    "description": "Label. Used for compositing prompt messages."
  },
  "u-form-table-view-column/muted": {
    "type": "string",
    "description": "Whether to be silent during verification. Optional values: `'message'` means only silent message prompt, `'all'` means silent message prompt and red box prompt at the same time"
  },
  "u-form-table-view-column/rules": {
    "type": "string, Array",
    "description": "Validation rules. The short form is a string type, and the full or mixed form is an array type."
  },
  "u-form-table-view-column/ignore-validation": {
    "type": "boolean",
    "description": "Ignore validation"
  },
  "u-form-table-view-column/ignore-rules": {
    "type": "boolean",
    "description": "Ignore validation rules. Deprecated, same as `ignore-validation`"
  },
  "u-form-table-view-column/validating-options": {
    "type": "object",
    "description": "A validation auxiliary object. Used in the `validate` method of Rule. `{ data: currentData, item, rowIndex }` will be additionally injected into the table."
  },
  "u-form-table-view-column/validating-value": {
    "type": "any",
    "description": "Temporarily modify the verification value"
  },
  "u-form-table-view-column/validating-process": {
    "type": "Function",
    "description": "Preprocess the value before validation"
  },
  "u-form-table/line": {
    "type": "boolean",
    "description": "Whether to display separator lines between cells"
  },
  "u-form-table/striped": {
    "type": "boolean",
    "description": "Whether table rows should be displayed as zebra stripes"
  },
  "u-form-table/hover": {
    "type": "boolean",
    "description": "Whether table rows should be highlighted when hovering"
  },
  "u-form/model": {
    "type": "object",
    "description": "Form data model"
  },
  "u-form/rules": {
    "type": "object",
    "description": "Validation rules for all fields in the form have been deprecated. It is recommended to add rules in each `<u-form-item>`."
  },
  "u-form/layout": {
    "type": "string",
    "description": "Form layout mode. Optional values: `block`, `inline`."
  },
  "u-form/label-size": {
    "type": "string",
    "description": "Label size. Optional values: `small`, `normal`, `large`."
  },
  "u-form-item/name": {
    "type": "string",
    "description": "The name of the form field. Deprecated."
  },
  "u-form-item/label": {
    "type": "string",
    "description": "Label. Used for left display and also used for the synthesis of prompt messages."
  },
  "u-form-item/label-size": {
    "type": "string",
    "description": "Set the label size of each form item individually"
  },
  "u-form-item/field-size": {
    "type": "string",
    "description": "Set the content size of each form item. Optional value: `'full'`"
  },
  "u-form-item/required": {
    "type": "boolean",
    "description": "Whether it is required. Only display style, if you want to verify the required items, you need to add a required rule in `rules`."
  },
  "u-form-item/message": {
    "type": "string",
    "description": "Default prompt message"
  },
  "u-form-item/muted": {
    "type": "string",
    "description": "Whether to be silent during verification. Optional values: `'message'` means only silent message prompt, `'all'` means silent message prompt and red box prompt at the same time"
  },
  "u-form-item/description": {
    "type": "string",
    "description": "Add description content"
  },
  "u-form-item/placement": {
    "type": "string",
    "description": "When the value is `'bottom'`, the prompt information is displayed at the bottom, changing the display position of the prompt information"
  },
  "u-form-item/layout": {
    "type": "string",
    "description": "\b\b\bLayout mode, optional value: `'block'`"
  },
  "u-form-item/rules": {
    "type": "string, Array",
    "description": "Validation rules. The short form is a string type, and the full or mixed form is an array type."
  },
  "u-form-item/ignore-validation": {
    "type": "boolean",
    "description": "Ignore validation"
  },
  "u-form-item/ignore-rules": {
    "type": "boolean",
    "description": "Ignore validation rules. Deprecated, same as `ignore-validation`"
  },
  "u-form-item/validating-options": {
    "type": "object",
    "description": "Validation helper object. Used in Rule's `validate` method."
  },
  "u-form-item/validating-value": {
    "type": "any",
    "description": "Temporarily modify the verification value"
  },
  "u-form-item/validating-process": {
    "type": "Function",
    "description": "Preprocess the value before validation"
  },
  "u-grid-layout/gap": {
    "type": "string",
    "description": "The spacing between grids, one value (row spacing and column spacing) or two values   (row spacing and column spacing). Optional values: `'none'`, `'small'`, `'normal'`, `'large'`"
  },
  "u-grid-layout-row/repeat": {
    "type": "number",
    "description": "Number of grid divisions"
  },
  "u-grid-layout-row/type": {
    "type": "string",
    "description": "Layout mode. Optional values: `'flex'` or empty"
  },
  "u-grid-layout-row/justify": {
    "type": "string",
    "description": "Horizontal distribution mode of flex layout mode, optional values: `'start'`, `'center'`, `'end'`, `'space-between'`, `'space-around'`"
  },
  "u-grid-layout-row/alignment": {
    "type": "string",
    "description": "Vertical alignment of flex layout mode, optional values: `'start'`, `'center'`, `'end'`, `'baseline'`, `'stretch'`"
  },
  "u-grid-layout-column/span": {
    "type": "number",
    "description": "Number of grid cells the column spans"
  },
  "u-grid-layout-column/offset": {
    "type": "number",
    "description": "Number of grid cells to offset the column to the left"
  },
  "u-grid-layout-column/pull": {
    "type": "number",
    "description": "The number of grid cells to move the column to the left"
  },
  "u-grid-layout-column/push": {
    "type": "number",
    "description": "The number of grid cells to move the column right by"
  },
  "u-grid-layout-column/media-huge": {
    "type": "number",
    "description": "Number of columns spanning the grid for responsive layouts `<=1440px`"
  },
  "u-grid-layout-column/media-large": {
    "type": "number",
    "description": "Number of columns spanning the grid for responsive layouts `<=1200px`"
  },
  "u-grid-layout-column/media-medium": {
    "type": "number",
    "description": "Number of columns spanning the grid for responsive layouts `<=960px`"
  },
  "u-grid-layout-column/media-small": {
    "type": "number",
    "description": "Number of columns spanning the grid for responsive layouts `<=768px`"
  },
  "u-grid-layout-column/media-mini": {
    "type": "number",
    "description": "Number of columns spanning the grid for responsive layouts `<=480px`"
  },
  "u-icon-tooltip/type": {
    "type": "string",
    "description": "Icon type. Optional values: `'info'`, `'help'`, `'detail'`"
  },
  "u-icon-tooltip/size": {
    "type": "string",
    "description": "Prompt size. Optional values: `'mini'`, `'normal'`, `'large'`"
  },
  "u-icon-tooltip/opened": {
    "type": "boolean",
    "description": "Popup/closed state"
  },
  "u-icon-tooltip/trigger": {
    "type": "string",
    "description": "How the tooltip is triggered. Possible values: `'click'`, `'hover'`, `'right-click'`, `'double-click'`, `'manual'`"
  },
  "u-icon-tooltip/placement": {
    "type": "string",
    "description": "The direction of the tooltip. Optional values: `'top'`, `'bottom'`, `'left'`, `'right'`, `'top-start'`, `'top-end'`, `'bottom-start'`, `'bottom-end'`, `'left-start`',` 'left-end'`, `'right-start'`, `'right-end'`"
  },
  "u-icon-tooltip/hide-delay": {
    "type": "number",
    "description": "The delay time for prompt content to disappear, in ms"
  },
  "u-icon-tooltip/offset": {
    "type": "string",
    "description": "Popup layer offset, such as: '10', '10px 10px', '10% 10%', the first value represents the horizontal offset, the second value represents the vertical displacement, the default unit is `px`"
  },
  "u-icon-tooltip/follow-cursor": {
    "type": "boolean, number, object",
    "description": "Whether to follow the mouse"
  },
  "u-icon-tooltip/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-input/type": {
    "type": "string",
    "description": "The input box type currently supports two types: `'text'` and `'password'`"
  },
  "u-input/value": {
    "type": "string",
    "description": "The value of the input box"
  },
  "u-input/clearable": {
    "type": "boolean",
    "description": "Whether it can be cleared. If it is turned on, a clear button will be displayed when there is content in the input box."
  },
  "u-input/placeholder": {
    "type": "string",
    "description": "Native properties. Compatible with IE9."
  },
  "u-input/minlength": {
    "type": "number",
    "description": "Native attribute"
  },
  "u-input/maxlength": {
    "type": "number",
    "description": "Native attribute"
  },
  "u-input/spellcheck": {
    "type": "boolean",
    "description": "Native attribute"
  },
  "u-input/autofocus": {
    "type": "boolean",
    "description": "Whether to automatically obtain focus"
  },
  "u-input/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-input/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-linear-layout/direction": {
    "type": "enum",
    "options": [
      "horizontal",
      "vertical"
    ],
    "description": "Order of arrangement."
  },
  "u-linear-layout/gap": {
    "type": "enum",
    "options": [
      "shrink",
      "none",
      "small",
      "normal",
      "large"
    ],
    "description": "Gap size, needs to be expanded by yourself."
  },
  "u-linear-layout/display": {
    "type": "string",
    "options": [
      "inline",
      "block"
    ],
    "description": "Display method. Optional values:"
  },
  "u-linear-layout/layout": {
    "type": "string",
    "options": [
      "none",
      "inline",
      "block"
    ],
    "description": "Layout mode, used to quickly adjust the display of child elements or components."
  },
  "u-linear-layout/type": {
    "type": "string",
    "options": [
      "flex"
    ],
    "description": "Layout mode."
  },
  "u-linear-layout/justify": {
    "type": "string",
    "description": "Main axis distribution method. Optional values in normal mode: `'start'`, `'center'`, `'end'`, `'space-between'`. Flex layout mode also supports: `'space-around'`. The function of `'space-between'` in normal mode is very weak and only supports left and right distribution."
  },
  "u-linear-layout/alignment": {
    "type": "string",
    "description": "Cross-axis alignment in flex layout mode, optional values: `'start'`, `'center'`, `'end'`, `'baseline'`, `'stretch'`"
  },
  "u-linear-progress/percent": {
    "type": "number",
    "description": "Percentage"
  },
  "u-link/href": {
    "type": "string",
    "description": "Link address"
  },
  "u-link/target": {
    "type": "string",
    "description": "(native attribute)"
  },
  "u-link/to": {
    "type": "string, Location",
    "description": "Requires vue-router, same as the `to` attribute of `<router-link>`. Can be a string or an object describing the target location."
  },
  "u-link/replace": {
    "type": "boolean",
    "description": "Requires vue-router, same as the `replace` attribute of `<router-link>`. If `true`, when clicked, `router.replace()` will be called instead of `router.push()`, so no `history` record will be left after navigation."
  },
  "u-link/append": {
    "type": "boolean",
    "description": "Requires vue-router, same as the `append` prop of `<router-link>`. If `true`, append the path of `to` after the current path."
  },
  "u-link/disabled": {
    "type": "boolean",
    "description": "Whether to disable. If disabled, it will not respond to the `click` event."
  },
  "u-link/display": {
    "type": "string",
    "description": "Display method. Optional values: `'inline'`, `'block'`"
  },
  "u-list-view/value": {
    "type": "any",
    "description": "The currently selected value"
  },
  "u-list-view/field": {
    "type": "string",
    "description": "Display text field"
  },
  "u-list-view/data": {
    "type": "Array<{ text, value }>",
    "description": "List data"
  },
  "u-list-view/data-source": {
    "type": "object, Function, DataSource",
    "description": "Multi-functional data source"
  },
  "u-list-view/cancelable": {
    "type": "boolean",
    "description": "Is it possible to deselect?"
  },
  "u-list-view/multiple": {
    "type": "boolean",
    "description": "Is it possible to select multiple items?"
  },
  "u-list-view/collapsible": {
    "type": "boolean",
    "description": "Whether the group can be collapsed"
  },
  "u-list-view/accordion": {
    "type": "boolean",
    "description": "Whether to expand only one group at a time"
  },
  "u-list-view/expand-trigger": {
    "type": "string",
    "description": "The triggering method of expanding/collapse. Optional values: `'click'` means that the entire row can be triggered by clicking, and `'click-expander'` means that it is triggered only when the small arrow is clicked."
  },
  "u-list-view/loading-text": {
    "type": "string",
    "description": "Loading text. Appears only when using paging loading."
  },
  "u-list-view/initial-load": {
    "type": "boolean",
    "description": "Whether to load immediately at the initialization"
  },
  "u-list-view/pageable": {
    "type": "boolean",
    "description": "Whether paging is required"
  },
  "u-list-view/page-size": {
    "type": "number",
    "description": "Page size"
  },
  "u-list-view/remote-paging": {
    "type": "number",
    "description": "Whether to use backend paging"
  },
  "u-list-view/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-list-view/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-list-view-item/value": {
    "type": "any",
    "description": "The value of this item"
  },
  "u-list-view-item/disabled": {
    "type": "boolean",
    "description": "Disable this option"
  },
  "u-list-view-item/item": {
    "type": "object",
    "description": "Related objects. When this option is selected, the thrown event will pass this object, which is convenient for development."
  },
  "u-list-view-group/title": {
    "type": "string",
    "description": "Displayed title"
  },
  "u-list-view-group/collapsible": {
    "type": "boolean",
    "description": "`false`"
  },
  "u-list-view-group/expanded": {
    "type": "boolean",
    "description": "Expand/collapse state"
  },
  "u-list-view-group/disabled": {
    "type": "boolean",
    "description": "Whether to disable. Cannot expand/collapse when disabled"
  },
  "u-list/type": {
    "type": "string",
    "description": "List prefix, such as: `'disc'`, `'circle'`, `'decimal'`, corresponding to the value of the native style property `list-style-type`."
  },
  "u-list/line": {
    "type": "string",
    "description": "Display separator lines between list rows. Possible values: `'both'`, `'horizontal'`, `'vertical'`"
  },
  "u-list/striped": {
    "type": "boolean",
    "description": "Whether list rows should be displayed as zebra stripes"
  },
  "u-list/hover": {
    "type": "boolean",
    "description": "Whether list rows should be highlighted when hovering"
  },
  "u-loading/size": {
    "type": "string",
    "description": "The size of the icon. Optional values: `'small'`, `'normal'`, `'large'`"
  },
  "u-loading/display": {
    "type": "string",
    "description": "Display mode. Optional values: `'inline'` means display inline, `'block'` means display at block level, `'full'` means fill the parent element (offsetParent), `'fullWindow'` means fill the entire browser"
  },
  "u-menu/router": {
    "type": "boolean",
    "description": "Whether to control which item is selected according to vue-router"
  },
  "u-menu/value": {
    "type": "any",
    "description": "The currently selected value"
  },
  "u-menu/collapsible": {
    "type": "boolean",
    "description": "Whether the group can be collapsed"
  },
  "u-menu/accordion": {
    "type": "boolean",
    "description": "Whether to expand only one group at a time"
  },
  "u-menu/expand-trigger": {
    "type": "string",
    "description": "The triggering method of expanding/collapse. Optional values: `'click'` means that the entire row can be triggered by clicking, and `'click-expander'` means that it is triggered only when the small arrow is clicked."
  },
  "u-menu/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-menu/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-menu-item/value": {
    "type": "any",
    "description": "The value of this item"
  },
  "u-menu-item/disabled": {
    "type": "boolean",
    "description": "Disable this option"
  },
  "u-menu-item/item": {
    "type": "object",
    "description": "Related objects. When this option is selected, the thrown event will pass this object, which is convenient for development."
  },
  "u-menu-item/href": {
    "type": "string",
    "description": "Link address"
  },
  "u-menu-item/target": {
    "type": "string",
    "description": "Open method"
  },
  "u-menu-item/to": {
    "type": "string, Location",
    "description": "Requires vue-router, same as the `to` attribute of `<router-link>`. Can be a string or an object describing the target location."
  },
  "u-menu-item/replace": {
    "type": "boolean",
    "description": "Requires vue-router, same as the `replace` attribute of `<router-link>`. If `true`, when clicked, `router.replace()` will be called instead of `router.push()`, so no `history` record will be left after navigation."
  },
  "u-menu-item/exact": {
    "type": "boolean",
    "description": "Requires vue-router, same as `exact` property of `<router-link>`. Highlighted only when it is exactly the same as the route."
  },
  "u-menu-group/title": {
    "type": "string",
    "description": "Displayed title"
  },
  "u-modal/visible": {
    "type": "boolean",
    "description": "Whether to display"
  },
  "u-modal/title": {
    "type": "string",
    "description": "Title of the pop-up window"
  },
  "u-modal/ok-button": {
    "type": "string",
    "description": "Confirm button text, if empty it will not be displayed"
  },
  "u-modal/cancel-button": {
    "type": "string",
    "description": "Cancel button text, if empty it will not be displayed"
  },
  "u-modal/size": {
    "type": "string",
    "description": "The size of the popup window. Optional values: `'small'`, `'normal'`, `'large'`"
  },
  "u-modal/static": {
    "type": "boolean",
    "description": "Whether to embed in page display"
  },
  "u-modal/mask-closable": {
    "type": "boolean",
    "description": "Whether to close the popup window when clicking the mask"
  },
  "u-navbar/router": {
    "type": "boolean",
    "description": "Whether to control the selection according to vue-router"
  },
  "u-navbar/value": {
    "type": "any",
    "description": "The currently selected value"
  },
  "u-navbar/field": {
    "type": "string",
    "description": "Display text field"
  },
  "u-navbar/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-navbar/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-navbar-item/value": {
    "type": "any",
    "description": "The value of this item"
  },
  "u-navbar-item/disabled": {
    "type": "boolean",
    "description": "Disable this option"
  },
  "u-navbar-item/item": {
    "type": "object",
    "description": "Related objects. When this option is selected, the thrown event will pass this object, which is convenient for development."
  },
  "u-navbar-item/href": {
    "type": "string",
    "description": "Link address"
  },
  "u-navbar-item/target": {
    "type": "string",
    "description": "Open method"
  },
  "u-navbar-item/to": {
    "type": "string, Location",
    "description": "Requires vue-router, same as the `to` attribute of `<router-link>`. Can be a string or an object describing the target location."
  },
  "u-navbar-item/replace": {
    "type": "boolean",
    "description": "Requires vue-router, same as the `replace` attribute of `<router-link>`. If `true`, when clicked, `router.replace()` will be called instead of `router.push()`, so no `history` record will be left after navigation."
  },
  "u-navbar-item/exact": {
    "type": "boolean",
    "description": "Requires vue-router, same as `exact` property of `<router-link>`. Highlighted only when it is exactly the same as the route."
  },
  "u-navbar-dropdown/trigger": {
    "type": "string",
    "description": "Trigger method. Optional values: `'click'`, `'hover'`, `'right-click'`, `'double-click'`, `'manual'`"
  },
  "u-navbar-dropdown/placement": {
    "type": "string",
    "description": "Pop-up orientation. Optional values: `'top'`, `'bottom'`, `'left'`, `'right'`, `'top-start'`, `'top-end'`, `'bottom-start'`, `'bottom-end'`, `'left-start`',` 'left-end'`, `'right-start'`, `'right-end'`"
  },
  "u-navbar-dropdown/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-number-input/value": {
    "type": "number",
    "description": "The value of the input box"
  },
  "u-number-input/min": {
    "type": "number",
    "description": "Minimum value"
  },
  "u-number-input/max": {
    "type": "number",
    "description": "Maximum value"
  },
  "u-number-input/step": {
    "type": "number",
    "description": "Interval, which indicates the amount of increase or decrease when clicking a button or pressing the up or down key"
  },
  "u-number-input/precision": {
    "type": "number",
    "description": "Precision, which indicates the smallest unit to be retained by a number, both integers and decimals are acceptable"
  },
  "u-number-input/formatter": {
    "type": "string, object",
    "description": "Format string, see examples for details. You can also pass a format object containing `get` and `set` methods."
  },
  "u-number-input/placeholder": {
    "type": "string",
    "description": "Native attribute"
  },
  "u-number-input/autofocus": {
    "type": "boolean",
    "description": "Native attribute"
  },
  "u-number-input/hide-buttons": {
    "type": "boolean",
    "description": "Whether to hide the button"
  },
  "u-number-input/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-number-input/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-number-input/size": {
    "type": "string",
    "description": "Size extension, supports one value: `'mini'`, `'small'`, `'normal'`, `'large'`, `'huge'`, `'full'`, or a combination of two values, the former represents the height, the latter represents the width, similar to the CSS padding writing format"
  },
  "u-pagination/page": {
    "type": "number",
    "description": "Current page number"
  },
  "u-pagination/total": {
    "type": "number",
    "description": "Total number of pages"
  },
  "u-pagination/side": {
    "type": "number",
    "description": "When there are many pages, the number of pages displayed on both sides is constant."
  },
  "u-pagination/around": {
    "type": "number",
    "description": "When there are many pages, the number displayed in the middle is constant"
  },
  "u-pagination/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-pagination/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-popup/title": {
    "type": "string",
    "description": "Popup box title"
  },
  "u-popup/opened": {
    "type": "boolean",
    "description": "Popup/closed state"
  },
  "u-popup/trigger": {
    "type": "string",
    "description": "The triggering method of the pop-up box. Optional values: `'click'`, `'hover'`, `'right-click'`, `'double-click'`, `'manual'`"
  },
  "u-popup/placement": {
    "type": "string",
    "description": "The pop-up direction of the pop-up box. Optional values: `'top'`, `'bottom'`, `'left'`, `'right'`, `'top-start'`, `'top-end'`, `'bottom-start'`, `'bottom-end'`, `'left-start`',` 'left-end'`, `'right-start'`, `'right-end'`"
  },
  "u-popup/hideDelay": {
    "type": "number",
    "description": "The delay time for prompt content to disappear, in `'ms'`"
  },
  "u-popup/offset": {
    "type": "string",
    "description": "Popup layer offset, such as: '10', '10px 10px', '10% 10%', the first value represents the horizontal offset, the second value represents the vertical displacement, the default unit is `px`"
  },
  "u-popup/follow-cursor": {
    "type": "boolean, number, object",
    "description": "Whether to follow the mouse"
  },
  "u-popup/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-popup/merge-borders": {
    "type": "boolean",
    "description": "Whether to automatically merge inner and outer borders"
  },
  "u-radios/value": {
    "type": "any",
    "description": "The currently selected value"
  },
  "u-radios/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-radios/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-radio/label": {
    "type": "any",
    "description": "Radio label. Used to associate the value of a radio group."
  },
  "u-radio/readonly": {
    "type": "boolean",
    "description": "Disable read-only"
  },
  "u-radio/disabled": {
    "type": "boolean",
    "description": "Disable this option"
  },
  "u-region-select/data": {
    "type": "Array<{ text, value }>",
    "description": "Data list"
  },
  "u-region-select/value": {
    "type": "any",
    "description": "The currently selected value"
  },
  "u-region-select/categories": {
    "type": "Array<{ label, key, placeholder }>",
    "description": "Multi-level classification"
  },
  "u-region-select/hide-empty": {
    "type": "boolean",
    "description": "Whether to hide empty lists"
  },
  "u-region-select/converter": {
    "type": "string, object",
    "description": "Converter between value and values. Optional values: `'join'` means joining the values   array to become value, `'join.number'` is similar to `join`, except that it will consider the case where it is a number. You can also use `:` to modify the separator, similar to Vue's instruction parameters, `'last-value'` means using the last item as value. You can also pass in an object containing { get, set }"
  },
  "u-region-select/field": {
    "type": "string",
    "description": "Display text field"
  },
  "u-region-select/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-region-select/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-sample/color": {
    "type": "string",
    "description": "Try 'primary'"
  },
  "u-select/value": {
    "type": "any",
    "description": "The currently selected value"
  },
  "u-select/field": {
    "type": "string",
    "description": "Display text field"
  },
  "u-select/data": {
    "type": "Array<{ text, value }>",
    "description": "List data"
  },
  "u-select/data-source": {
    "type": "object, Function, DataSource",
    "description": "Multi-functional data source"
  },
  "u-select/cancelable": {
    "type": "boolean",
    "description": "Is it possible to deselect?"
  },
  "u-select/multiple": {
    "type": "boolean",
    "description": "Is it possible to select multiple items?"
  },
  "u-select/placeholder": {
    "type": "boolean",
    "description": "Placeholder for a select box"
  },
  "u-select/loading-text": {
    "type": "string",
    "description": "Loading text. Appears only when using paging loading."
  },
  "u-select/empty-text": {
    "type": "string",
    "description": "Text when there is no match"
  },
  "u-select/empty-disabled": {
    "type": "boolean",
    "description": "Automatically disabled when no data"
  },
  "u-select/initial-load": {
    "type": "boolean",
    "description": "Whether to load immediately at the initialization"
  },
  "u-select/pageable": {
    "type": "boolean",
    "description": "Whether paging is required"
  },
  "u-select/page-size": {
    "type": "number",
    "description": "Page size"
  },
  "u-select/remote-paging": {
    "type": "boolean",
    "description": "Whether to use backend paging"
  },
  "u-select/clearable": {
    "type": "boolean",
    "description": "Is there a clear button?"
  },
  "u-select/filterable": {
    "type": "boolean",
    "description": "Whether to use input box for filtering"
  },
  "u-select/match-method": {
    "type": "string, Function",
    "description": "Matching method when filtering"
  },
  "u-select/case-sensitive": {
    "type": "string, Function",
    "description": "Is the filter case sensitive?"
  },
  "u-select/remote-filtering": {
    "type": "boolean",
    "description": "Whether to use backend filtering"
  },
  "u-select/auto-complete": {
    "type": "boolean",
    "description": "Whether to enable the automatic supplement mode to add items that are not in the list"
  },
  "u-select/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-select/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-select/opened": {
    "type": "boolean",
    "description": "Popup/closed state"
  },
  "u-select-item/value": {
    "type": "any",
    "description": "The value of this item"
  },
  "u-select-item/disabled": {
    "type": "boolean",
    "description": "Disable this option"
  },
  "u-select-item/item": {
    "type": "object",
    "description": "Related objects. When this option is selected, the thrown event will pass this object, which is convenient for development."
  },
  "u-select-group/title": {
    "type": "string",
    "description": "Displayed title"
  },
  "u-sidebar/router": {
    "type": "boolean",
    "description": "Whether to control which item is selected according to vue-router"
  },
  "u-sidebar/value": {
    "type": "any",
    "description": "The currently selected value"
  },
  "u-sidebar/collapsible": {
    "type": "boolean",
    "description": "Whether the group can be collapsed"
  },
  "u-sidebar/accordion": {
    "type": "boolean",
    "description": "Whether to expand only one group at a time"
  },
  "u-sidebar/expand-trigger": {
    "type": "string",
    "description": "The triggering method of expanding/collapse. Optional values: `'click'` means that the entire row can be triggered by clicking, and `'click-expander'` means that it is triggered only when the small arrow is clicked."
  },
  "u-sidebar/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-sidebar/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-sidebar-item/value": {
    "type": "any",
    "description": "The value of this item"
  },
  "u-sidebar-item/disabled": {
    "type": "boolean",
    "description": "Disable this option"
  },
  "u-sidebar-item/item": {
    "type": "object",
    "description": "Related objects. When this option is selected, the thrown event will pass this object, which is convenient for development."
  },
  "u-sidebar-item/href": {
    "type": "string",
    "description": "Link address"
  },
  "u-sidebar-item/target": {
    "type": "string",
    "description": "Open method"
  },
  "u-sidebar-item/to": {
    "type": "string, Location",
    "description": "Requires vue-router, same as the `to` attribute of `<router-link>`. Can be a string or an object describing the target location."
  },
  "u-sidebar-item/replace": {
    "type": "boolean",
    "description": "Requires vue-router, same as the `replace` attribute of `<router-link>`. If `true`, when clicked, `router.replace()` will be called instead of `router.push()`, so no `history` record will be left after navigation."
  },
  "u-sidebar-item/exact": {
    "type": "boolean",
    "description": "Requires vue-router, same as `exact` property of `<router-link>`. Highlighted only when it is exactly the same as the route."
  },
  "u-sidebar-group/title": {
    "type": "string",
    "description": "Displayed title"
  },
  "u-sidebar-group/collapsible": {
    "type": "boolean",
    "description": "`false`"
  },
  "u-sidebar-group/expanded": {
    "type": "boolean",
    "description": "Expand/collapse state"
  },
  "u-sidebar-group/disabled": {
    "type": "boolean",
    "description": "Whether to disable. Cannot expand/collapse when disabled"
  },
  "u-slider/value": {
    "type": "number",
    "description": "The value of the slider"
  },
  "u-slider/min": {
    "type": "number",
    "description": "Minimum value"
  },
  "u-slider/max": {
    "type": "number",
    "description": "Maximum value"
  },
  "u-slider/step": {
    "type": "number",
    "description": "Interval, which indicates the amount of increase or decrease when clicking a button or pressing the up or down key. `0` means continuous"
  },
  "u-slider/precision": {
    "type": "number",
    "description": "Precision, which indicates the smallest unit to be retained by a number, both integers and decimals are acceptable"
  },
  "u-slider/range": {
    "type": "Array",
    "description": "Further restrict `value`, usually pass in an array, the first value indicates the start value of the range, and the second value indicates the end value of the range."
  },
  "u-slider/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-slider/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-steps/value": {
    "type": "number",
    "description": "Current step number"
  },
  "u-steps/readonly": {
    "type": "boolean",
    "description": "Whether it is read-only. You can select it if it is not read-only."
  },
  "u-steps/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-step/title": {
    "type": "string",
    "description": "Step name"
  },
  "u-step/disabled": {
    "type": "boolean",
    "description": "Whether to disable this tab"
  },
  "u-switch/value": {
    "type": "boolean",
    "description": "Switch status"
  },
  "u-switch/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-switch/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-table-view/title": {
    "type": "string",
    "description": "Table title"
  },
  "u-table-view/title-alignment": {
    "type": "string",
    "description": "Table title alignment"
  },
  "u-table-view/border": {
    "type": "boolean",
    "description": "Whether to display border"
  },
  "u-table-view/line": {
    "type": "boolean",
    "description": "Whether to display separator lines between cells"
  },
  "u-table-view/striped": {
    "type": "boolean",
    "description": "Whether table rows should be displayed as zebra stripes"
  },
  "u-table-view/hover": {
    "type": "boolean",
    "description": "Whether table rows should be highlighted when hovering"
  },
  "u-table-view/show-head": {
    "type": "boolean",
    "description": "Whether to display the table header"
  },
  "u-table-view/loading": {
    "type": "boolean",
    "description": "Manually set whether loading is in progress"
  },
  "u-table-view/loading-text": {
    "type": "string",
    "description": "Loading text"
  },
  "u-table-view/error": {
    "type": "boolean",
    "description": "Manually set whether loading fails"
  },
  "u-table-view/error-text": {
    "type": "string",
    "description": "Text when loading fails"
  },
  "u-table-view/empty-text": {
    "type": "string",
    "description": "Text when there is no data"
  },
  "u-table-view/data": {
    "type": "Array<{ [field]: string, ... }>",
    "description": "Table data"
  },
  "u-table-view/data-source": {
    "type": "object, Function, DataSource",
    "description": "Multi-functional data source"
  },
  "u-table-view/initial-load": {
    "type": "boolean",
    "description": "Whether to load immediately at the initialization"
  },
  "u-table-view/pageable": {
    "type": "boolean",
    "description": "Whether paging is required"
  },
  "u-table-view/page-size": {
    "type": "number",
    "description": "Page size"
  },
  "u-table-view/page-size-options": {
    "type": "Array",
    "description": "List of page size options"
  },
  "u-table-view/show-total": {
    "type": "boolean",
    "description": "Whether to display the total number of entries"
  },
  "u-table-view/show-sizer": {
    "type": "boolean",
    "description": "Whether to display the option to switch the page size"
  },
  "u-table-view/show-jumper": {
    "type": "boolean",
    "description": "Whether to display the page jump input box"
  },
  "u-table-view/sorting": {
    "type": "object<{ field: string, order: string, compare: Function }>",
    "description": "Current sort field and order"
  },
  "u-table-view/default-order": {
    "type": "string",
    "description": "Sort order of all columns when first clicked"
  },
  "u-table-view/filtering": {
    "type": "object",
    "description": "Filter items"
  },
  "u-table-view/remote-paging": {
    "type": "boolean",
    "description": "Whether to use backend paging"
  },
  "u-table-view/remote-sorting": {
    "type": "boolean",
    "description": "Whether to use backend sorting"
  },
  "u-table-view/remote-filtering": {
    "type": "boolean",
    "description": "Whether to use backend filtering"
  },
  "u-table-view/value-field": {
    "type": "string",
    "description": "In single-select and multi-select operations, a field that specifies unique values   for data"
  },
  "u-table-view/value": {
    "type": "any",
    "description": "The currently selected value"
  },
  "u-table-view/values": {
    "type": "Array",
    "description": "Multiple choice values"
  },
  "u-table-view/selectable": {
    "type": "boolean",
    "description": "Is it possible to select rows?"
  },
  "u-table-view/cancelable": {
    "type": "boolean",
    "description": "Is it possible to deselect?"
  },
  "u-table-view/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-table-view/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-table-view/accordion": {
    "type": "boolean",
    "description": "Whether to collapse other rows when expanding a row when there is an `expander` column"
  },
  "u-table-view/resizable": {
    "type": "boolean",
    "description": "Is it possible to adjust the column width?"
  },
  "u-table-view/resize-remaining": {
    "type": "boolean",
    "description": "Adjust the column width effect. Optional values: `sequence` means keep the total width unchanged, and give priority to the next column to make up the width; `average` means keep the total width unchanged, and all the following columns make up the width evenly; `none` means no processing is done, and the table width changes."
  },
  "u-table-view-column/title": {
    "type": "string",
    "description": "Column header"
  },
  "u-table-view-column/field": {
    "type": "string",
    "description": "Field name in data"
  },
  "u-table-view-column/width": {
    "type": "string, number",
    "description": "Specify the width of the column, either as a number or a percentage."
  },
  "u-table-view-column/ellipsis": {
    "type": "boolean",
    "description": "Whether to omit the display. By default, the text will wrap if it exceeds the limit."
  },
  "u-table-view-column/formatter": {
    "type": "string, object, Function, Formatter",
    "description": "Formatter"
  },
  "u-table-view-column/-": {
    "type": "",
    "description": ""
  },
  "u-table-view-column/sortable": {
    "type": "boolean",
    "description": "Whether this column can be sorted"
  },
  "u-table-view-column/default-order": {
    "type": "string",
    "description": "The sort order when the column is first clicked"
  },
  "u-table-view-column/filters": {
    "type": "Array<{ text: string, value: any }>",
    "description": "The sort order when the column is first clicked"
  },
  "u-table-view-column/hidden": {
    "type": "boolean",
    "description": "Whether to hide"
  },
  "u-table-view-column/type": {
    "type": "string",
    "description": "Column type. Optional values: `index` indicates ordinal column, `radio` indicates single-select column, `checkbox` indicates multi-select column, and `expander` indicates expanded column."
  },
  "u-table-view-column/start-index": {
    "type": "number",
    "description": "Starting number when `type=\"index\"`"
  },
  "u-table/line": {
    "type": "boolean",
    "description": "Whether to display separator lines between cells"
  },
  "u-table/striped": {
    "type": "boolean",
    "description": "Whether table rows should be displayed as zebra stripes"
  },
  "u-table/hover": {
    "type": "boolean",
    "description": "Whether table rows should be highlighted when hovering"
  },
  "u-tabs/value": {
    "type": "any",
    "description": "The value of the selected tab"
  },
  "u-tabs/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-tabs/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-tabs/closable": {
    "type": "boolean",
    "description": "Can it be closed?"
  },
  "u-tabs/router": {
    "type": "boolean",
    "description": "Whether to control which tab is selected based on vue-router"
  },
  "u-tab/title": {
    "type": "string",
    "description": "Tab title"
  },
  "u-tab/value": {
    "type": "any",
    "description": "The value of the tab"
  },
  "u-tab/disabled": {
    "type": "boolean",
    "description": "Whether to disable this tab"
  },
  "u-tab/href": {
    "type": "string",
    "description": "Link address"
  },
  "u-tab/target": {
    "type": "string",
    "description": "Open method"
  },
  "u-tab/to": {
    "type": "string, Location",
    "description": "Requires vue-router, same as the `to` attribute of `<router-link>`. Can be a string or an object describing the target location."
  },
  "u-tab/replace": {
    "type": "boolean",
    "description": "Requires vue-router, same as the `replace` attribute of `<router-link>`. If `true`, when clicked, `router.replace()` will be called instead of `router.push()`, so no `history` record will be left after navigation."
  },
  "u-tab/exact": {
    "type": "boolean",
    "description": "Requires vue-router, same as `exact` property of `<router-link>`. Highlighted only when it is exactly the same as the route."
  },
  "u-text/size": {
    "type": "string",
    "description": "Size extension. Possible values: `'small'`, `'normal'`, `'large'`"
  },
  "u-text/color": {
    "type": "string",
    "description": "Color extension. Possible values: `'default'`, `'primary'`, `'error'`, `'disabled'`"
  },
  "u-text/display": {
    "type": "string",
    "description": "Display method. Optional values: `'inline'`, `'block'`"
  },
  "u-text/wrap": {
    "type": "string",
    "description": "Line break mode. Optional values: `'normal'` means the default mode, `'ellipsis'` means extra text is omitted, `'break'` means forced line break and automatic line break for English, `'nowrap'` means no line break at all."
  },
  "u-textarea/value": {
    "type": "string",
    "description": "The value of the input box"
  },
  "u-textarea/clearable": {
    "type": "boolean",
    "description": "Whether it can be cleared. If it is turned on, a clear button will be displayed when there is content in the input box."
  },
  "u-textarea/placeholder": {
    "type": "string",
    "description": "Native properties. Compatible with IE9."
  },
  "u-textarea/minlength": {
    "type": "number",
    "description": "Native properties"
  },
  "u-textarea/maxlength": {
    "type": "number",
    "description": "Native properties"
  },
  "u-textarea/spellcheck": {
    "type": "boolean",
    "description": "Native properties"
  },
  "u-textarea/autofocus": {
    "type": "boolean",
    "description": "Whether to automatically obtain focus"
  },
  "u-textarea/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-textarea/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-textarea/resize": {
    "type": "string",
    "description": "Whether it can be resized. Optional values: `'none'`, `'both'`, `'horizontal'`, `'vertical'`"
  },
  "u-toast/position": {
    "type": "string",
    "description": "Display position, optional values: `'top-center'`, `'top-left'`, `'top-right'`, `'bottom-center'`, `'bottom-left'`, `'bottom-right'`, `static`"
  },
  "u-toast/duration": {
    "type": "number",
    "description": "The time the prompt stays. `0` means always."
  },
  "u-toast/single": {
    "type": "boolean",
    "description": "Multiple prompts will be merged into one"
  },
  "u-toast/text": {
    "type": "string",
    "description": "Default prompt content"
  },
  "u-toast/color": {
    "type": "string",
    "description": "The color of the prompt"
  },
  "u-toast/closable": {
    "type": "boolean",
    "description": "Can I turn off the prompt?"
  },
  "u-tooltip/opened": {
    "type": "boolean",
    "description": "Popup/closed state"
  },
  "u-tooltip/trigger": {
    "type": "string",
    "description": "How the tooltip is triggered. Possible values: `'click'`, `'hover'`, `'right-click'`, `'double-click'`, `'manual'`"
  },
  "u-tooltip/placement": {
    "type": "string",
    "description": "The direction of the tooltip. Optional values: `'top'`, `'bottom'`, `'left'`, `'right'`, `'top-start'`, `'top-end'`, `'bottom-start'`, `'bottom-end'`, `'left-start`',` 'left-end'`, `'right-start'`, `'right-end'`"
  },
  "u-tooltip/hide-delay": {
    "type": "number",
    "description": "The delay time for prompt content to disappear, in ms"
  },
  "u-tooltip/offset": {
    "type": "string",
    "description": "Popup layer offset, such as: '10', '10px 10px', '10% 10%', the first value represents the horizontal offset, the second value represents the vertical displacement, the default unit is `px`"
  },
  "u-tooltip/follow-cursor": {
    "type": "boolean, number, object",
    "description": "Whether to follow the mouse"
  },
  "u-tooltip/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-transfer/source": {
    "type": "Array<{ text, value }>",
    "description": "Original data list"
  },
  "u-transfer/target": {
    "type": "Array<{ text, value }>",
    "description": "Target data list"
  },
  "u-transfer/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-transfer/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-tree-view/data": {
    "type": "Array<{ text, value }>",
    "description": "Data list in Data writing mode"
  },
  "u-tree-view/value": {
    "type": "any",
    "description": "The currently selected value"
  },
  "u-tree-view/field": {
    "type": "string",
    "description": "Display text field"
  },
  "u-tree-view/cancelable": {
    "type": "boolean",
    "description": "Is it possible to deselect?"
  },
  "u-tree-view/checkable": {
    "type": "boolean",
    "description": "Can I select/cancel?"
  },
  "u-tree-view/accordion": {
    "type": "boolean",
    "description": "Whether to expand only one group at a time"
  },
  "u-tree-view/expand-trigger": {
    "type": "string",
    "description": "The triggering method of expanding/collapse. Optional values: `'click'` means that the entire row can be triggered by clicking, and `'click-expander'` means that it is triggered only when the small arrow is clicked."
  },
  "u-tree-view/readonly": {
    "type": "boolean",
    "description": "Is it read-only?"
  },
  "u-tree-view/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-tree-view-node/value": {
    "type": "any",
    "description": "The value of this item"
  },
  "u-tree-view-node/expanded": {
    "type": "any",
    "description": "Expand/collapse state"
  },
  "u-tree-view-node/checked": {
    "type": "any",
    "description": "Selected/unselected state"
  },
  "u-tree-view-node/disabled": {
    "type": "boolean",
    "description": "Disable this option"
  },
  "u-tree-view-node/node": {
    "type": "object",
    "description": "Related objects. When this option is selected, the thrown event will pass this object, which is convenient for development."
  },
  "u-uploader/url": {
    "type": "string",
    "description": "Upload file path"
  },
  "u-uploader/data-type": {
    "type": "string",
    "description": "Receive data type. Optional values: `text`, `xml`, `json`"
  },
  "u-uploader/data": {
    "type": "object",
    "description": "Additional data"
  },
  "u-uploader/name": {
    "type": "string",
    "description": "The name of the uploaded file, the backend generally requires this field"
  },
  "u-uploader/extensions": {
    "type": "string, Array",
    "description": "The uploadable extensions. The default is empty, which means that any file type can be uploaded. It can be a string with multiple extensions separated by `,`, such as: `'png,jpg,gif'`; it can also be an array, such as: `['png', 'jpg', 'gif']`"
  },
  "u-uploader/max-size": {
    "type": "string, number",
    "description": "The maximum file size that can be uploaded. The default is empty, indicating that files of any size can be uploaded; if it is a number, it means the unit is bytes; if it is a string, you can add the following units: `kB`, `MB`, `GB`"
  },
  "u-uploader/disabled": {
    "type": "boolean",
    "description": "Whether to disable"
  },
  "u-validator/name": {
    "type": "string",
    "description": "The name of the form field. Deprecated."
  },
  "u-validator/label": {
    "type": "string",
    "description": "Label. Used to synthesize prompt messages in UValidator and to display labels in other components such as UFormItem."
  },
  "u-validator/rules": {
    "type": "string, Array",
    "description": "Validation rules. The short form is a string type, and the full or mixed form is an array type."
  },
  "u-validator/message": {
    "type": "string",
    "description": "Default prompt message"
  },
  "u-validator/muted": {
    "type": "string",
    "description": "Whether to be silent during verification. Optional values: `'message'` means only silent message prompt, `'all'` means silent message prompt and red box prompt at the same time"
  },
  "u-validator/ignore-validation": {
    "type": "boolean",
    "description": "Ignore validation"
  },
  "u-validator/ignore-rules": {
    "type": "boolean",
    "description": "Ignore validation rules. Deprecated, same as `ignore-validation`"
  },
  "u-validator/validating-options": {
    "type": "object",
    "description": "Validation helper object. Used in Rule's `validate` method."
  },
  "u-validator/validating-value": {
    "type": "any",
    "description": "Temporarily modify the verification value"
  },
  "u-validator/validating-process": {
    "type": "Function",
    "description": "Preprocess the value before validation"
  },
  "u-validator/manual": {
    "type": "boolean",
    "description": "Whether to perform manual validation. If `true`, UValidator will not perform corresponding validation after listening to the `input`, `change` and `blur` events of child components."
  },
  "l-page-center/size": {
    "type": "enum",
    "options": [
      "mini",
      "small",
      "normal",
      "large",
      "huge"
    ],
    "description": "Width size."
  }
}